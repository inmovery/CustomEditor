<Window x:Class="CustomEditor.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:vms="clr-namespace:CustomEditor.ViewModels"
		xmlns:controls="clr-namespace:CustomEditor.Controls"
		xmlns:converters="clr-namespace:CustomEditor.Converters"
		xmlns:behaviors="clr-namespace:CustomEditor.Behaviors"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:colorPicker="clr-namespace:CustomEditor.Controls.ColorPicker"
		xmlns:zoomAndPan="clr-namespace:CustomEditor.Controls.ZoomAndPan"
		Title="MainWindow"
		MinHeight="450"
		MinWidth="800"
		FocusManager.FocusedElement="{Binding ElementName=scroller}"
		mc:Ignorable="d">
	<Window.DataContext>
		<vms:MainWindowViewModel />
	</Window.DataContext>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="PreviewKeyDown">
			<i:InvokeCommandAction Command="{Binding WindowPreviewKeyDownCommand}"
								   PassEventArgsToCommand="True" />
		</i:EventTrigger>

		<i:EventTrigger EventName="PreviewKeyUp">
			<i:InvokeCommandAction Command="{Binding WindowPreviewKeyUpCommand}"
								   PassEventArgsToCommand="True" />
		</i:EventTrigger>

		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding WindowLoadedCommand}"
								   PassEventArgsToCommand="True" />
		</i:EventTrigger>

		<i:EventTrigger EventName="PreviewMouseMove">
			<i:InvokeCommandAction Command="{Binding WindowPreviewMouseMoveCommand}"
								   PassEventArgsToCommand="True" />
		</i:EventTrigger>

		<i:EventTrigger EventName="SizeChanged">
			<i:InvokeCommandAction Command="{Binding WindowSizeChangedCommand}"
								   PassEventArgsToCommand="True" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Window.Resources>
		<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<converters:DoubleFormatConverter x:Key="DoubleFormatConverter" />

		<!-- UI commands. -->
		<RoutedUICommand x:Key="Commands.ZoomOut" />
		<RoutedUICommand x:Key="Commands.ZoomIn" />
	</Window.Resources>

	<Window.InputBindings>

		<!--
        Bind keys to commands.
        -->
		<KeyBinding
			Key="Minus"
			Command="{StaticResource Commands.ZoomOut}"
		/>
		<KeyBinding
			Key="Plus"
			Command="{StaticResource Commands.ZoomIn}"
		/>

	</Window.InputBindings>

	<Window.CommandBindings>

		<!--
        Bind commands to event handlers.
        -->
		<CommandBinding 
			Command="{StaticResource Commands.ZoomOut}" 
			Executed="ZoomOut_Executed" 
		/>
		<CommandBinding 
			Command="{StaticResource Commands.ZoomIn}" 
			Executed="ZoomIn_Executed" 
		/>

	</Window.CommandBindings>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width=".80*" />
			<ColumnDefinition Width=".30*" />
		</Grid.ColumnDefinitions>
		<Border Grid.Column="0"
				Grid.ColumnSpan="2"
				Grid.Row="0"
				Padding="10"
				BorderThickness="0,0,0,2"
				BorderBrush="{StaticResource BlackBrush}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<StackPanel Grid.Column="0"
							Orientation="Horizontal">
					<controls:ButtonWithImage PathImage="{StaticResource PointerIcon}"
											  Style="{StaticResource ActivatedButtonWithImage}"
											  Width="40"
											  Height="40"
											  Fill="{StaticResource BlackBrush}"
											  IsActive="{Binding ToolData.IsSelectToolActive, Mode=TwoWay}"
											  Margin="15 0" />
					<!--
					<controls:ButtonWithImage PathImage="{StaticResource CapturePointerIcon}"
											  Style="{StaticResource ActivatedButtonWithImage}"
											  Width="45"
											  Height="45"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0" />
					-->

					<controls:ButtonWithImage PathImage="{StaticResource FilledRectangleIcon}"
											  Style="{StaticResource ActivatedButtonWithImage}"
											  Width="45"
											  Height="45"
											  Fill="{StaticResource BlackBrush}"
											  IsActive="{Binding ToolData.IsRectangleToolActive, Mode=TwoWay}"
											  Margin="15 0" />

					<controls:ButtonWithImage PathImage="{StaticResource PolygonIcon}"
											  Style="{StaticResource ActivatedButtonWithImage}"
											  Width="45"
											  Height="45"
											  Fill="{StaticResource BlackBrush}"
											  IsActive="{Binding ToolData.IsPolylineToolActive, Mode=TwoWay}"
											  Margin="15 0" />

					<controls:ButtonWithImage PathImage="{StaticResource RecycleBinIconSecond}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="35"
											  Height="35"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0"
											  IsEnabled="{Binding Path=IsShapeSelected}"
											  Command="{Binding Path=DeleteCommand}" />

					<controls:ButtonWithImage PathImage="{StaticResource ExportIconSecond}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="35"
											  Height="35"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0"
											  Command="{Binding Path=ExportCommand}" />

					<controls:ButtonWithImage PathImage="{StaticResource SaveToProjectFileIcon}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="35"
											  Height="35"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0"
											  Command="{Binding Path=SaveCanvasToProjectFileCommand}" />

					<!--
					<controls:ButtonWithImage PathImage="{StaticResource ImportIcon}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="35"
											  Height="35"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0"
											  Command="{Binding Path=ImportImageCommand}" />
					-->

					<controls:ButtonWithImage PathImage="{StaticResource OpenProjectFileIcon}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="35"
											  Height="35"
											  Fill="{StaticResource BlackBrush}"
											  Margin="15 0"
											  Command="{Binding Path=LoadProjectFileCommand}" />

				</StackPanel>

				<StackPanel Grid.Column="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right">
					<controls:ButtonWithImage PathImage="{StaticResource UndoActionIcon}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="25"
											  Height="25"
											  Fill="{StaticResource BlackBrush}"
											  Margin="5,0"
											  Command="{Binding Path=UndoCommand}" />

					<controls:ButtonWithImage PathImage="{StaticResource RedoActionIcon}"
											  Style="{StaticResource RegularButtonWithImage}"
											  Width="25"
											  Height="25"
											  Fill="{StaticResource BlackBrush}"
											  Margin="5,0"
											  Command="{Binding Path=RedoCommand}" />
				</StackPanel>
			</Grid>
		</Border>
		<ScrollViewer Grid.Column="0"
					  Grid.Row="1"
					  x:Name="scroller"
					  CanContentScroll="True"
					  HorizontalScrollBarVisibility="Visible"
					  VerticalScrollBarVisibility="Visible">
			<zoomAndPan:ZoomAndPanControl x:Name="zoomAndPanControl"
			                              Background="LightGray">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDown">
						<i:InvokeCommandAction Command="{Binding ZoomAndPanControlMouseDownCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
					<i:EventTrigger EventName="MouseUp">
						<i:InvokeCommandAction Command="{Binding ZoomAndPanControlMouseUpCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
					<i:EventTrigger EventName="MouseMove">
						<i:InvokeCommandAction Command="{Binding ZoomAndPanControlMouseMoveCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
					<i:EventTrigger EventName="MouseWheel">
						<i:InvokeCommandAction Command="{Binding ZoomAndPanControlMouseWheelCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
				</i:Interaction.Triggers>

				<controls:CustomCanvas x:Name="Workspace"
				                       ClipToBounds="True"
				                       IsShiftKeyPressed="{Binding IsShiftKeyPressed}"
				                       IsDrawing="{Binding IsDrawing}"
				                       Background="White"
				                       Width="2000"
				                       Height="2000">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="PreviewMouseDown">
							<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseDownCommand}"
							                       PassEventArgsToCommand="True" />
						</i:EventTrigger>
						<i:EventTrigger EventName="PreviewMouseUp">
							<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseUpCommand}"
							                       PassEventArgsToCommand="True" />
						</i:EventTrigger>
						<i:EventTrigger EventName="PreviewMouseMove">
							<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseMoveCommand}"
							                       PassEventArgsToCommand="True" />
						</i:EventTrigger>
					</i:Interaction.Triggers>

					<!--
					<Rectangle Canvas.Left="50"
					           Canvas.Top="50"
					           Width="80"
					           Height="150"
					           Fill="Blue"
					           Cursor="Hand" />
					<Rectangle
						Canvas.Left="550"
						Canvas.Top="350"
						Width="80"
						Height="150"
						Fill="Green"
						Cursor="Hand"
					/>
					<Rectangle
						Canvas.Left="850"
						Canvas.Top="850"
						Width="30"
						Height="20"
						Fill="Purple"
						Cursor="Hand"
					/>
					<Rectangle
						Canvas.Left="1850"
						Canvas.Top="1850"
						Width="80"
						Height="150"
						Fill="Red"
						Cursor="Hand"
					/>
					-->

				</controls:CustomCanvas>
			</zoomAndPan:ZoomAndPanControl>
			<!--
			<controls:CustomCanvas x:Name="Workspace"
			                       ClipToBounds="True"
			                       IsShiftKeyPressed="{Binding IsShiftKeyPressed}"
			                       IsDrawing="{Binding IsDrawing}"
			                       Background="Transparent"
			                       Width="2000"
			                       Height="2000">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="PreviewMouseDown">
						<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseDownCommand}"
											   PassEventArgsToCommand="True" />
					</i:EventTrigger>
					<i:EventTrigger EventName="PreviewMouseUp">
						<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseUpCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
					<i:EventTrigger EventName="PreviewMouseMove">
						<i:InvokeCommandAction Command="{Binding CanvasPreviewMouseMoveCommand}"
						                       PassEventArgsToCommand="True" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</controls:CustomCanvas>
			-->
		</ScrollViewer>
		<Border Grid.Column="1"
				Grid.Row="1"
				BorderThickness="2,0,0,0"
				BorderBrush="{StaticResource BlackBrush}"
				Padding="5">

			<Grid VerticalAlignment="Top">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Row="0"
						   Grid.Column="0"
						   VerticalAlignment="Center"
						   Text="Цвет границы"
						   Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />
				<colorPicker:ColorPicker Grid.Row="0"
										 Grid.Column="1"
										 VerticalAlignment="Center"
										 Color="{Binding Path=ShapeProperties.BorderColor, Mode=TwoWay}"
										 Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />

				<TextBlock Grid.Row="1"
						   Grid.Column="0"
						   VerticalAlignment="Center"
						   Text="Цвет заливки"
						   Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />
				<colorPicker:ColorPicker Grid.Row="1"
										 Grid.Column="1"
										 VerticalAlignment="Center"
										 Color="{Binding Path=ShapeProperties.FillColor, Mode=TwoWay}"
										 Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />

				<StackPanel Grid.Row="2"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Orientation="Horizontal"
							Margin="0,10">
					<TextBlock VerticalAlignment="Center"
							   Text="Толщина границы"
							   Margin="0,0,5,0"
							   Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />
					<controls:FilteredTextBox x:Name="ThicknessInputField"
											  Style="{StaticResource TextBoxStyle}"
											  MinimumDigit="0"
											  MaximumDigit="500"
											  Width="40"
											  Text="{Binding ShapeProperties.Thickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											  Visibility="{Binding IsAvailableColorAndThicknessSettings, Converter={StaticResource BoolToVisibilityConverter}}" />
				</StackPanel>

				<StackPanel Grid.Row="3"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Orientation="Horizontal"
							Margin="0,10"
							Visibility="{Binding IsAvailableWidthAndHeight, Converter={StaticResource BoolToVisibilityConverter}}">
					<TextBlock VerticalAlignment="Center"
							   Text="Ширина"
							   Margin="0,0,5,0" />
					<controls:FilteredTextBox x:Name="WidthInputField"
											  Style="{StaticResource TextBoxStyle}"
											  MinimumDigit="0"
											  MaximumDigit="500"
											  Width="100"
											  Text="{Binding ShapeProperties.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>

				<StackPanel Grid.Row="4"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Orientation="Horizontal"
							Margin="0,10"
							Visibility="{Binding IsAvailableWidthAndHeight, Converter={StaticResource BoolToVisibilityConverter}}">
					<TextBlock VerticalAlignment="Center"
							   Text="Высота"
							   Margin="0,0,10,0" />
					<controls:FilteredTextBox x:Name="HeightInputField"
											  Style="{StaticResource TextBoxStyle}"
											  MinimumDigit="0"
											  MaximumDigit="500"
											  Width="100"
											  Text="{Binding ShapeProperties.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>

				<StackPanel Grid.Row="5"
				            Grid.Column="0"
				            Grid.ColumnSpan="2"
				            Orientation="Vertical">
					<TextBlock Text="{Binding CanvasStartXPoint}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding CanvasStartYPoint}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding CanvasEndXPoint}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding CanvasEndYPoint}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding RandomPointX}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding RandomPointY}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding CurrentPosition.X}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />

					<TextBlock Text="{Binding CurrentPosition.Y}"
					           Margin="5"
					           Foreground="Black"
					           FontSize="16" />
				</StackPanel>
			</Grid>
		</Border>
	</Grid>
</Window>