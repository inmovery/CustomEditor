<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:system="clr-namespace:System;assembly=mscorlib"
					xmlns:converters="clr-namespace:CustomEditor.Converters"
					xmlns:colorPicker="clr-namespace:CustomEditor.Controls.ColorPicker">

	<converters:HsbToColorConverter x:Key="HsbToColorConverter" />

	<Style x:Key="ColorPickerRepeatButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ColorPickerSliderThumb" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  VerticalAlignment="Center"
			  UseLayoutRounding="True">
			<Ellipse Width="20"
					 Height="20"
					 Fill="White"
					 RenderTransformOrigin=".5,.5"
					 UseLayoutRounding="True" />
			<Ellipse x:Name="shadow"
					 Width="24"
					 Height="24"
					 Margin="-12"
					 Fill="{TemplateBinding Foreground}"
					 Opacity=".0"
					 UseLayoutRounding="True" />
			<Ellipse x:Name="grip"
					 Width="16"
					 Height="16"
					 Fill="{TemplateBinding Foreground}"
					 RenderTransformOrigin=".5,.5"
					 UseLayoutRounding="True">
				<Ellipse.RenderTransform>
					<ScaleTransform ScaleX="1"
									ScaleY="1" />
				</Ellipse.RenderTransform>
			</Ellipse>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleX">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleY">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleX">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleY">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleX">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1.3">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip"
														   Storyboard.TargetProperty="RenderTransform.ScaleY">
								<EasingDoubleKeyFrame KeyTime="0:0:0"
													  Value="1" />
								<EasingDoubleKeyFrame KeyTime="0:0:0.1"
													  Value="1.3">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut" />
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="shadow"
											 Storyboard.TargetProperty="Opacity"
											 To=".26"
											 Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="shadow"
											 Storyboard.TargetProperty="Opacity"
											 To=".0"
											 Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter TargetName="grip"
						Property="Fill"
						Value="{DynamicResource DisabledBrush}" />
				<Setter TargetName="grip"
						Property="Stroke"
						Value="{DynamicResource DisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ColorPickerSlider"
		   TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
		<Setter Property="Background"
				Value="{x:Null}" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="Maximum"
				Value="360" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto"
											   MinHeight="{TemplateBinding MinHeight}" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Border Grid.Row="1"
									Height="8"
									CornerRadius="4">
								<Border.Background>
									<LinearGradientBrush StartPoint="0,0"
														 EndPoint="1,1">
										<GradientStop Offset="0"
													  Color="#FF0000" />
										<GradientStop Offset="0.166"
													  Color="#FFFF00" />
										<GradientStop Offset="0.333"
													  Color="#00FF00" />
										<GradientStop Offset="0.5"
													  Color="#00FFFF" />
										<GradientStop Offset="0.666"
													  Color="#0000FF" />
										<GradientStop Offset="0.833"
													  Color="#FF00FF" />
										<GradientStop Offset="1.0"
													  Color="#FF0000" />
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<Track x:Name="PART_Track"
								   Grid.Row="1"
								   OpacityMask="{x:Null}">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.DecreaseLarge}"
												  Style="{StaticResource ColorPickerRepeatButton}" />
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.IncreaseLarge}"
												  Style="{StaticResource ColorPickerRepeatButton}" />
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb"
										   Width="20"
										   Height="20"
										   VerticalAlignment="Center"
										   Focusable="False"
										   OverridesDefaultStyle="True"
										   Template="{StaticResource ColorPickerSliderThumb}">
										<Thumb.Foreground>
											<MultiBinding Converter="{StaticResource HsbToColorConverter}">
												<Binding Path="Value"
														 RelativeSource="{RelativeSource TemplatedParent}" />
												<Binding>
													<Binding.Source>
														<system:Double>1</system:Double>
													</Binding.Source>
												</Binding>
												<Binding>
													<Binding.Source>
														<system:Double>1</system:Double>
													</Binding.Source>
												</Binding>
											</MultiBinding>
										</Thumb.Foreground>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground"
						Value="{DynamicResource DisabledBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type colorPicker:ColorPicker}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type colorPicker:ColorPicker}">
					<Slider x:Name="PART_HueSlider"
							Margin="8"
							IsMoveToPointEnabled="True"
							Orientation="Horizontal"
							Style="{StaticResource ColorPickerSlider}"
							Value="{Binding Hsb.Hue, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>